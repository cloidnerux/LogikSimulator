Project(AutomatenSimulator)
cmake_minimum_required(VERSION 2.8.2)

SET(FSMSim_BIN_DIR bin)
SET(FSMSim_LIB_DIR lib)

SET(LIBRARY_OUTPUT_PATH    ${PROJECT_SOURCE_DIR}/${FSMSim_LIB_DIR})
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/${FSMSim_BIN_DIR})

SET( CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${PROJECT_BINARY_DIR}/${FSMSim_BIN_DIR})
SET( CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${PROJECT_SOURCE_DIR}/${FSMSim_BIN_DIR})
SET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${PROJECT_BINARY_DIR}/${FSMSim_LIB_DIR})
SET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${PROJECT_SOURCE_DIR}/${FSMSim_LIB_DIR})

SET(CMAKE_DEBUG_POSTFIX "d")

set(CMAKE_CXX_FLAGS "-std=c++11")

#SET(mainsrc src/main.cpp)

#
file(GLOB FSMSim_SRC "${PROJECT_SOURCE_DIR}/src/*")

file(GLOB FSMSim_HEADER "${PROJECT_SOURCE_DIR}/include/*")

INCLUDE_DIRECTORIES(
${PROJECT_SOURCE_DIR}/include 
)
Option(BuildApplication "Soll die Application gebaut werden" ON)


IF (BuildApplication MATCHES "ON")
MESSAGE("Building Application")

SET(FSMSimSource ${FSMSim_SRC} ${FSMSim_HEADER})

ADD_EXECUTABLE(FSMSim ${FSMSimSource})
#SET_TARGET_PROPERTIES(FSMSim PROPERTIES LINKER_LANGUAGE C++)
set_target_properties( FSMSim PROPERTIES DEBUG_POSTFIX "d" )


Target_LINK_LIBRARIES(FSMSim)

# install executable
install_targets (/bin FSMSim)
ENDIF(BuildApplication MATCHES "ON")
